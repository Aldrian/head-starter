{"version":3,"sources":["main.js"],"names":["window","getProjects","then","fonts","family","find","font","name","variant","variants","template","values","ptypoFont","prototypo","Ptypo","default","createFont","createdFont","changeParams","$","on","changeParam","text","tween"],"mappings":"AAAA;AACAA,OAAO,oBAAP,EAA6BC,WAA7B,CAAyC,OAAzC,EAAkD,UAAlD,EAA8DC,IAA9D,CAAmE,UAAUC,KAAV,EAAiB;AAChF;AACA,QAAIC,SAASD,MAAME,IAAN,CAAW,UAAUC,IAAV,EAAgB;AACpC,eAAOA,KAAKC,IAAL,KAAc,aAArB;AACH,KAFY,CAAb;AAGA;AACA,QAAIC,UAAUJ,UAAUA,OAAOK,QAAP,CAAgBJ,IAAhB,CAAqB,UAAUG,OAAV,EAAmB;AAC5D,eAAOA,QAAQD,IAAR,KAAiB,cAAxB;AACH,KAFuB,CAAxB;AAGA;AACA,QAAIG,WAAWN,OAAOM,QAAtB;AACA,QAAIC,SAASH,QAAQG,MAArB;AACA,QAAIC,SAAJ;;AAEA,QAAIC,YAAY,IAAIC,MAAMC,OAAV,CAAkB,sCAAlB,CAAhB;AACA;AACA;AACAF,cAAUG,UAAV,CAAqB,UAArB,EAAiCN,QAAjC,EAA2CR,IAA3C,CAAgD,UAASe,WAAT,EAAqB;AACjEL,oBAAYK,WAAZ;AACA;AACAA,oBAAYC,YAAZ,CAAyBP,MAAzB;AACH,KAJD;;AAMA;AACAQ,MAAE,wBAAF,EAA4BC,EAA5B,CAA+B,OAA/B,EAAwC,YAAU;AAC9C;AACAR,kBAAUS,WAAV,CAAsB,WAAtB,EAAmC,GAAnC,EAAwCF,EAAE,SAAF,EAAaG,IAAb,EAAxC;AACH,KAHD;AAIAH,MAAE,kBAAF,EAAsBC,EAAtB,CAAyB,OAAzB,EAAkC,YAAU;AACxC;AACAR,kBAAUW,KAAV,CAAgB,OAAhB,EAAyB,GAAzB,EAA8B,EAA9B,EAAkC,GAAlC,EAAuC,YAAU,CAAE,CAAnD,EAAqDJ,EAAE,SAAF,EAAaG,IAAb,EAArD;AACH,KAHD;AAKH,CAjCD;;AAoCA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"main.js","sourcesContent":["// Permet de récupérer les projets d'un compte prototypo\nwindow['prototypo-projects'].getProjects('email', 'password').then(function (fonts) {\n    // Recherche la famille dans la liste de projets\n    var family = fonts.find(function (font) {\n        return font.name === 'family name';\n    });\n    // Recherche la variante dans les variantes de la famille\n    var variant = family && family.variants.find(function (variant) {\n        return variant.name === 'variant name';\n    });\n    // Récupère les valeurs nécessaires à initialiser la police\n    var template = family.template;\n    var values = variant.values;\n    var ptypoFont;\n\n    var prototypo = new Ptypo.default('b1f4fb23-7784-456e-840b-f37f5a647b1c');\n    // Crée une font 'testfont' en utilisant le template récupéré\n    // la font 'testfont' a étée ajoutée à la page en css via une font-family\n    prototypo.createFont('testfont', template).then(function(createdFont){\n        ptypoFont = createdFont;\n        // Change les paramètres de la font créée en utilisant les valeurs récupérées du compte\n        createdFont.changeParams(values);\n    });\n\n    // Deux évènements de tests lancés va des boutons sur la page et récupérés en jquery\n    $('.js-button-changeparam').on('click', function(){\n        // Changement de paramètre simple de la thickness vers 200, en utilisant le texte de la page comme subset\n        ptypoFont.changeParam('thickness', 200, $('.text p').text());\n    });\n    $('.js-button-tween').on('click', function(){\n        // Anime la width vers 1.4 sur 10 étapes pendant 0.3 secondes en utilisant le texte de la page comme subset\n        ptypoFont.tween('width', 1.4, 10, 0.3, function(){}, $('.text p').text());\n    });\n\n});\n\n\n/****************Librairie Prototypo **************/\n\n// createFont(fontName, fontTemplate)\n// crée une fonte 'fontName' utilisable en CSS via une balise font-family en utilisant le template 'fontTemplate'\n\n\n// ptypofont.changeParam(paramName, paramValue, subset)\n// Change le paramètre 'paramname' de la font 'ptypofont' en lui donnant la valeur 'paramValue';\n// Possibilité de limiter les caractères modifiés en donnant un 'subset' : chaîne de caractères, pas besoin que ça soit unique\n\n// ptypofont.changeParams(paramObj, subset)\n// Change les paramètres de la font 'ptypofont' selon l'objet de paramètres donné\n// {'thickness': 110, 'width': 1}\n// Possibilité de limiter les caractères modifiés en donnant un 'subset' : chaîne de caractères, pas besoin que ça soit unique\n\n\n// ptypofont.tween(paramName, paramValue, steps, aDuration, cb, subset)\n// Anime la fonte 'ptypofont' pendant 'aDuration' secondes en faisant varier 'steps' fois le 'paramName' jusqu'à 'paramValue'\n// Renvoie 'cb' (fonction) quand terminé\n// Possibilité de limiter les caractères modifiés en donnant un 'subset' : chaîne de caractères, pas besoin que ça soit unique\n\n// ptypofont.getArrayBuffer()\n// Renvoie l'arrayBufer de la font 'ptypofont'\n\n// ptypofont.reset(subset)\n// Réinitialise la font 'ptypofont' en lui redonnant les valeurs du template de base\n// Possibilité de limiter les caractères modifiés en donnant un 'subset' : chaîne de caractères, pas besoin que ça soit unique\n\n"]}